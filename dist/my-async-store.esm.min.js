var e=function(e){return e()};var r=new Map;function n(n){if(r.has(n))return r.get(n);var t,a,u,o=(t=new Map,a=new Set,u=function(e){for(var r=0;r<e.length;r++)if(!t.has(e[r]))return!1;return!0},{wait:function(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];return new Promise((function(r){var n=!1,t=function(){if(u(e)){if(n)throw new Error("Called More Than One Times!");n=!0,a.delete(t),r()}};t(),n||a.add(t)}))},set:function(r,n){return t.set(r,n)&&a.forEach(e)},get:function(e){return t.get(e)},del:function(e){return t.delete(e)},has:function(e){return t.has(e)},keys:function(){return Array.from(t.keys())},values:function(){return Array.from(t.values())},all:function(){return Array.from(t)},clear:function(){return t.clear()},size:function(){return t.size},clearDeps:function(){return a.clear()}});return o.namespace=n,r.set(n,o),o}var t=n(Symbol("my-async-store")),a=t.set,u=t.get,o=t.wait,i=t.del,f=t.has,c=t.keys,s=t.values,l=t.all,h=t.clear,v=t.size,y=t.clearDeps;export{l as all,h as clear,y as clearDeps,i as del,u as get,f as has,c as keys,n as namespace,a as set,v as size,s as values,o as wait};
