var n=function(n){return n()},e=function(n){return function(e){for(var r=0;r<n.length;r++)if(n[r]===e)return void n.splice(r,1)}};var r=new Map;function t(t){if(r.has(t))return r.get(t);var a=function(){var r=new Map,t=[],a=e(t),o=function(n){return n.map(r.has.bind(r)).every(Boolean)};return{wait:function(){for(var n=[],e=0;e<arguments.length;e++)n[e]=arguments[e];return new Promise((function(e){var u=!1,i=function(){if(o(n)){if(u)throw new Error("Called More Than One Times!");u=!0,a(i),e(r)}};i(),u||t.push(i)}))},storeMap:r,set:function(e,a){return r.set(e,a)&&[].concat(t).forEach(n)},get:function(n){return r.get(n)},del:function(n){return r.delete(n)},has:function(n){return r.has(n)},clear:function(){return r.clear()},size:function(){return r.size}}}();return a.namespace=t,r.set(t,a),a}var a=t(Symbol("my-async-store")),o=a.set,u=a.get,i=a.wait,c=a.del,f=a.has,s=a.clear,l=a.size,h=a.storeMap;export{s as clear,c as del,u as get,f as has,t as namespace,o as set,l as size,h as storeMap,i as wait};
